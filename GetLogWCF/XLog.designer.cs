#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace GetLogWCF
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="XDemoId")]
	public partial class XLogDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertRecordLog(RecordLog instance);
    partial void UpdateRecordLog(RecordLog instance);
    partial void DeleteRecordLog(RecordLog instance);
    #endregion
		
		public XLogDataContext() : 
				base(global::GetLogWCF.Properties.Settings.Default.XDemoIdConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public XLogDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XLogDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XLogDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XLogDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<RecordLog> RecordLog
		{
			get
			{
				return this.GetTable<RecordLog>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecordLog")]
	public partial class RecordLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _rlId;
		
		private string _rlDeviceId;
		
		private string _rlDeviceType;
		
		private string _rlProject;
		
		private string _rlService;
		
		private string _rlApi;
		
		private string _rlStep;
		
		private string _rlMsgTag;
		
		private string _rlMsg;
		
		private string _rlElement;
		
		private string _rlMachine;
		
		private System.Nullable<System.DateTime> _rlDate;
		
		private string _rlSolution;
		
		private string _rlIsShow;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrlIdChanging(long value);
    partial void OnrlIdChanged();
    partial void OnrlDeviceIdChanging(string value);
    partial void OnrlDeviceIdChanged();
    partial void OnrlDeviceTypeChanging(string value);
    partial void OnrlDeviceTypeChanged();
    partial void OnrlProjectChanging(string value);
    partial void OnrlProjectChanged();
    partial void OnrlServiceChanging(string value);
    partial void OnrlServiceChanged();
    partial void OnrlApiChanging(string value);
    partial void OnrlApiChanged();
    partial void OnrlStepChanging(string value);
    partial void OnrlStepChanged();
    partial void OnrlMsgTagChanging(string value);
    partial void OnrlMsgTagChanged();
    partial void OnrlMsgChanging(string value);
    partial void OnrlMsgChanged();
    partial void OnrlElementChanging(string value);
    partial void OnrlElementChanged();
    partial void OnrlMachineChanging(string value);
    partial void OnrlMachineChanged();
    partial void OnrlDateChanging(System.Nullable<System.DateTime> value);
    partial void OnrlDateChanged();
    partial void OnrlSolutionChanging(string value);
    partial void OnrlSolutionChanged();
    partial void OnrlIsShowChanging(string value);
    partial void OnrlIsShowChanged();
    #endregion
		
		public RecordLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long rlId
		{
			get
			{
				return this._rlId;
			}
			set
			{
				if ((this._rlId != value))
				{
					this.OnrlIdChanging(value);
					this.SendPropertyChanging();
					this._rlId = value;
					this.SendPropertyChanged("rlId");
					this.OnrlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlDeviceId", DbType="NVarChar(50)")]
		public string rlDeviceId
		{
			get
			{
				return this._rlDeviceId;
			}
			set
			{
				if ((this._rlDeviceId != value))
				{
					this.OnrlDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._rlDeviceId = value;
					this.SendPropertyChanged("rlDeviceId");
					this.OnrlDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlDeviceType", DbType="NVarChar(4)")]
		public string rlDeviceType
		{
			get
			{
				return this._rlDeviceType;
			}
			set
			{
				if ((this._rlDeviceType != value))
				{
					this.OnrlDeviceTypeChanging(value);
					this.SendPropertyChanging();
					this._rlDeviceType = value;
					this.SendPropertyChanged("rlDeviceType");
					this.OnrlDeviceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlProject", DbType="NVarChar(20)")]
		public string rlProject
		{
			get
			{
				return this._rlProject;
			}
			set
			{
				if ((this._rlProject != value))
				{
					this.OnrlProjectChanging(value);
					this.SendPropertyChanging();
					this._rlProject = value;
					this.SendPropertyChanged("rlProject");
					this.OnrlProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlService", DbType="NVarChar(20)")]
		public string rlService
		{
			get
			{
				return this._rlService;
			}
			set
			{
				if ((this._rlService != value))
				{
					this.OnrlServiceChanging(value);
					this.SendPropertyChanging();
					this._rlService = value;
					this.SendPropertyChanged("rlService");
					this.OnrlServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlApi", DbType="NVarChar(20)")]
		public string rlApi
		{
			get
			{
				return this._rlApi;
			}
			set
			{
				if ((this._rlApi != value))
				{
					this.OnrlApiChanging(value);
					this.SendPropertyChanging();
					this._rlApi = value;
					this.SendPropertyChanged("rlApi");
					this.OnrlApiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlStep", DbType="NVarChar(10)")]
		public string rlStep
		{
			get
			{
				return this._rlStep;
			}
			set
			{
				if ((this._rlStep != value))
				{
					this.OnrlStepChanging(value);
					this.SendPropertyChanging();
					this._rlStep = value;
					this.SendPropertyChanged("rlStep");
					this.OnrlStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlMsgTag", DbType="NVarChar(20)")]
		public string rlMsgTag
		{
			get
			{
				return this._rlMsgTag;
			}
			set
			{
				if ((this._rlMsgTag != value))
				{
					this.OnrlMsgTagChanging(value);
					this.SendPropertyChanging();
					this._rlMsgTag = value;
					this.SendPropertyChanged("rlMsgTag");
					this.OnrlMsgTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlMsg", DbType="NVarChar(100)")]
		public string rlMsg
		{
			get
			{
				return this._rlMsg;
			}
			set
			{
				if ((this._rlMsg != value))
				{
					this.OnrlMsgChanging(value);
					this.SendPropertyChanging();
					this._rlMsg = value;
					this.SendPropertyChanged("rlMsg");
					this.OnrlMsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlElement", DbType="NVarChar(MAX)")]
		public string rlElement
		{
			get
			{
				return this._rlElement;
			}
			set
			{
				if ((this._rlElement != value))
				{
					this.OnrlElementChanging(value);
					this.SendPropertyChanging();
					this._rlElement = value;
					this.SendPropertyChanged("rlElement");
					this.OnrlElementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlMachine", DbType="NVarChar(50)")]
		public string rlMachine
		{
			get
			{
				return this._rlMachine;
			}
			set
			{
				if ((this._rlMachine != value))
				{
					this.OnrlMachineChanging(value);
					this.SendPropertyChanging();
					this._rlMachine = value;
					this.SendPropertyChanged("rlMachine");
					this.OnrlMachineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> rlDate
		{
			get
			{
				return this._rlDate;
			}
			set
			{
				if ((this._rlDate != value))
				{
					this.OnrlDateChanging(value);
					this.SendPropertyChanging();
					this._rlDate = value;
					this.SendPropertyChanged("rlDate");
					this.OnrlDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlSolution", DbType="NVarChar(50)")]
		public string rlSolution
		{
			get
			{
				return this._rlSolution;
			}
			set
			{
				if ((this._rlSolution != value))
				{
					this.OnrlSolutionChanging(value);
					this.SendPropertyChanging();
					this._rlSolution = value;
					this.SendPropertyChanged("rlSolution");
					this.OnrlSolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rlIsShow", DbType="NVarChar(4)")]
		public string rlIsShow
		{
			get
			{
				return this._rlIsShow;
			}
			set
			{
				if ((this._rlIsShow != value))
				{
					this.OnrlIsShowChanging(value);
					this.SendPropertyChanging();
					this._rlIsShow = value;
					this.SendPropertyChanged("rlIsShow");
					this.OnrlIsShowChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
