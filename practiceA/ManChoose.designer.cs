#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace practiceA
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="測試區")]
	public partial class ManChooseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertManChoose(ManChoose instance);
    partial void UpdateManChoose(ManChoose instance);
    partial void DeleteManChoose(ManChoose instance);
    partial void InsertManColor(ManColor instance);
    partial void UpdateManColor(ManColor instance);
    partial void DeleteManColor(ManColor instance);
    partial void InsertParties(Parties instance);
    partial void UpdateParties(Parties instance);
    partial void DeleteParties(Parties instance);
    #endregion
		
		public ManChooseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PartyDBContext"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ManChooseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ManChooseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ManChooseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ManChooseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ManChoose> ManChoose
		{
			get
			{
				return this.GetTable<ManChoose>();
			}
		}
		
		public System.Data.Linq.Table<ManColor> ManColor
		{
			get
			{
				return this.GetTable<ManColor>();
			}
		}
		
		public System.Data.Linq.Table<Parties> Parties
		{
			get
			{
				return this.GetTable<Parties>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ManChoose")]
	public partial class ManChoose : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _no;
		
		private string _nickName;
		
		private string _partyName;
		
		private string _time;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnoChanging(int value);
    partial void OnnoChanged();
    partial void OnnickNameChanging(string value);
    partial void OnnickNameChanged();
    partial void OnpartyNameChanging(string value);
    partial void OnpartyNameChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    #endregion
		
		public ManChoose()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int no
		{
			get
			{
				return this._no;
			}
			set
			{
				if ((this._no != value))
				{
					this.OnnoChanging(value);
					this.SendPropertyChanging();
					this._no = value;
					this.SendPropertyChanged("no");
					this.OnnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nickName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string nickName
		{
			get
			{
				return this._nickName;
			}
			set
			{
				if ((this._nickName != value))
				{
					this.OnnickNameChanging(value);
					this.SendPropertyChanging();
					this._nickName = value;
					this.SendPropertyChanged("nickName");
					this.OnnickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partyName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string partyName
		{
			get
			{
				return this._partyName;
			}
			set
			{
				if ((this._partyName != value))
				{
					this.OnpartyNameChanging(value);
					this.SendPropertyChanging();
					this._partyName = value;
					this.SendPropertyChanged("partyName");
					this.OnpartyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ManColor")]
	public partial class ManColor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nickName;
		
		private string _color;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnickNameChanging(string value);
    partial void OnnickNameChanged();
    partial void OncolorChanging(string value);
    partial void OncolorChanged();
    #endregion
		
		public ManColor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nickName", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nickName
		{
			get
			{
				return this._nickName;
			}
			set
			{
				if ((this._nickName != value))
				{
					this.OnnickNameChanging(value);
					this.SendPropertyChanging();
					this._nickName = value;
					this.SendPropertyChanged("nickName");
					this.OnnickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string color
		{
			get
			{
				return this._color;
			}
			set
			{
				if ((this._color != value))
				{
					this.OncolorChanging(value);
					this.SendPropertyChanging();
					this._color = value;
					this.SendPropertyChanged("color");
					this.OncolorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parties")]
	public partial class Parties : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _no;
		
		private string _shopName;
		
		private string _phone;
		
		private string _address;
		
		private string _note;
		
		private string _time;
		
		private string _nickName;
		
		private string _color;
		
		private string _partyName;
		
		private string _participants;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnoChanging(int value);
    partial void OnnoChanged();
    partial void OnshopNameChanging(string value);
    partial void OnshopNameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OnnickNameChanging(string value);
    partial void OnnickNameChanged();
    partial void OncolorChanging(string value);
    partial void OncolorChanged();
    partial void OnpartyNameChanging(string value);
    partial void OnpartyNameChanged();
    partial void OnparticipantsChanging(string value);
    partial void OnparticipantsChanged();
    #endregion
		
		public Parties()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int no
		{
			get
			{
				return this._no;
			}
			set
			{
				if ((this._no != value))
				{
					this.OnnoChanging(value);
					this.SendPropertyChanging();
					this._no = value;
					this.SendPropertyChanged("no");
					this.OnnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shopName", DbType="NVarChar(MAX)")]
		public string shopName
		{
			get
			{
				return this._shopName;
			}
			set
			{
				if ((this._shopName != value))
				{
					this.OnshopNameChanging(value);
					this.SendPropertyChanging();
					this._shopName = value;
					this.SendPropertyChanged("shopName");
					this.OnshopNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(MAX)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nickName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string nickName
		{
			get
			{
				return this._nickName;
			}
			set
			{
				if ((this._nickName != value))
				{
					this.OnnickNameChanging(value);
					this.SendPropertyChanging();
					this._nickName = value;
					this.SendPropertyChanged("nickName");
					this.OnnickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color", DbType="NVarChar(MAX)")]
		public string color
		{
			get
			{
				return this._color;
			}
			set
			{
				if ((this._color != value))
				{
					this.OncolorChanging(value);
					this.SendPropertyChanging();
					this._color = value;
					this.SendPropertyChanged("color");
					this.OncolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partyName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string partyName
		{
			get
			{
				return this._partyName;
			}
			set
			{
				if ((this._partyName != value))
				{
					this.OnpartyNameChanging(value);
					this.SendPropertyChanging();
					this._partyName = value;
					this.SendPropertyChanged("partyName");
					this.OnpartyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_participants", DbType="NVarChar(MAX)")]
		public string participants
		{
			get
			{
				return this._participants;
			}
			set
			{
				if ((this._participants != value))
				{
					this.OnparticipantsChanging(value);
					this.SendPropertyChanging();
					this._participants = value;
					this.SendPropertyChanged("participants");
					this.OnparticipantsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
